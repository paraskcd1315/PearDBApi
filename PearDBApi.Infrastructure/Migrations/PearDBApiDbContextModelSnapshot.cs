// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PearDBApi.Infrastructure.Persistence;

#nullable disable

namespace PearDBApi.Infrastructure.Migrations
{
    [DbContext(typeof(PearDBApiDbContext))]
    partial class PearDBApiDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("PearDBApi.Domain.ArchitectureAggregate.Architecture", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Architecture", (string)null);
                });

            modelBuilder.Entity("PearDBApi.Domain.DeviceAggregate.Device", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("ArchitectureId")
                        .HasColumnType("char(36)");

                    b.Property<string>("BatteryCapacity")
                        .HasColumnType("longtext");

                    b.Property<string>("BatteryLife")
                        .HasColumnType("longtext");

                    b.Property<string>("BdId")
                        .HasColumnType("longtext");

                    b.Property<string>("Biometrics")
                        .HasColumnType("longtext");

                    b.Property<string>("Bluetooth")
                        .HasColumnType("longtext");

                    b.Property<string>("Board")
                        .HasColumnType("longtext");

                    b.Property<int?>("CPUCoreCount")
                        .HasColumnType("int");

                    b.Property<string>("Camera")
                        .HasColumnType("longtext");

                    b.Property<string>("Channels")
                        .HasColumnType("longtext");

                    b.Property<string>("Charger")
                        .HasColumnType("longtext");

                    b.Property<string>("ColorGamut")
                        .HasColumnType("longtext");

                    b.Property<string>("CpId")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("DataCache")
                        .HasColumnType("longtext");

                    b.Property<Guid>("DeviceTypeId")
                        .HasColumnType("char(36)");

                    b.Property<bool?>("DolbyAtmos")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("EfficiencyCores")
                        .HasColumnType("int");

                    b.Property<int?>("ExternalDisplayCount")
                        .HasColumnType("int");

                    b.Property<string>("GpuCoreCount")
                        .HasColumnType("longtext");

                    b.Property<bool?>("HeadphoneJack")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("InstructionCache")
                        .HasColumnType("longtext");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("KeyCount")
                        .HasColumnType("longtext");

                    b.Property<string>("L2Cache")
                        .HasColumnType("longtext");

                    b.Property<string>("Micophone")
                        .HasColumnType("longtext");

                    b.Property<string>("Microphone")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("NeuralEngineCoreCount")
                        .HasColumnType("longtext");

                    b.Property<string>("OtherSensors")
                        .HasColumnType("longtext");

                    b.Property<string>("PeakBrightness")
                        .HasColumnType("longtext");

                    b.Property<int?>("PerformanceCores")
                        .HasColumnType("int");

                    b.Property<string>("PixelsPerInch")
                        .HasColumnType("longtext");

                    b.Property<string>("Ports")
                        .HasColumnType("longtext");

                    b.Property<bool?>("ProMotion")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("RAM")
                        .HasColumnType("longtext");

                    b.Property<string>("RefreshRate")
                        .HasColumnType("longtext");

                    b.Property<DateOnly>("ReleasedDate")
                        .HasColumnType("date");

                    b.Property<int?>("ResolutionX")
                        .HasColumnType("int");

                    b.Property<int?>("ResolutionY")
                        .HasColumnType("int");

                    b.Property<string>("ScreenSize")
                        .HasColumnType("longtext");

                    b.Property<Guid?>("SocId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Speakers")
                        .HasColumnType("longtext");

                    b.Property<string>("Storage")
                        .HasColumnType("longtext");

                    b.Property<string>("Supports")
                        .HasColumnType("longtext");

                    b.Property<bool?>("TouchBar")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("TouchID")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Trackpad")
                        .HasColumnType("longtext");

                    b.Property<bool?>("TrueTone")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("UpdatedDateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("WiFi")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("ArchitectureId");

                    b.HasIndex("DeviceTypeId");

                    b.HasIndex("SocId");

                    b.ToTable("Device", (string)null);
                });

            modelBuilder.Entity("PearDBApi.Domain.DeviceTypeAggregate.DeviceType", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("DeviceType", (string)null);
                });

            modelBuilder.Entity("PearDBApi.Domain.SOCAggregate.Soc", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("ArchitectureId")
                        .HasColumnType("char(36)");

                    b.Property<string>("ManufacturingProcess")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("ArchitectureId");

                    b.ToTable("SOC", (string)null);
                });

            modelBuilder.Entity("PearDBApi.Domain.DeviceAggregate.Device", b =>
                {
                    b.HasOne("PearDBApi.Domain.ArchitectureAggregate.Architecture", "Architecture")
                        .WithMany()
                        .HasForeignKey("ArchitectureId");

                    b.HasOne("PearDBApi.Domain.DeviceTypeAggregate.DeviceType", "DeviceType")
                        .WithMany("Devices")
                        .HasForeignKey("DeviceTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PearDBApi.Domain.SOCAggregate.Soc", "Soc")
                        .WithMany()
                        .HasForeignKey("SocId");

                    b.Navigation("Architecture");

                    b.Navigation("DeviceType");

                    b.Navigation("Soc");
                });

            modelBuilder.Entity("PearDBApi.Domain.SOCAggregate.Soc", b =>
                {
                    b.HasOne("PearDBApi.Domain.ArchitectureAggregate.Architecture", "Architecture")
                        .WithMany()
                        .HasForeignKey("ArchitectureId");

                    b.Navigation("Architecture");
                });

            modelBuilder.Entity("PearDBApi.Domain.DeviceTypeAggregate.DeviceType", b =>
                {
                    b.Navigation("Devices");
                });
#pragma warning restore 612, 618
        }
    }
}
